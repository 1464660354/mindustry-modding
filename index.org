#+TITLE: Mindustry Modding Guide
:PREAMBLE:
#+AUTHOR: Simon Woodbury-Forget
#+EMAIL: simonwoodburyforget@gmail.com
#+DATE: 2019-10-31

#+SUBTITLE: for build v99 (release v5)
#+LANGUAGE: en
#+TEXINFO_DEFFN: t
#+OPTIONS: H:4 num:3 toc:2

#+TEXINFO_FILENAME: index

#+TODO: TODO UNTESTED | DONE

#+TEXINFO_HEADER: Modding documentation for Mindustry v99 (81)

:END:

* Overview
  :PROPERTIES:
  :DESCRIPTION: the things you may not know.
  :END:

  Mindustry mods are simply directories of assests. You reuse existing types and can use different values to initialize them, and you can even overwrite initialization of vanilla content.

  You can add custom sprites and sounds; sharing your mod is as simple as giving someone your project directory; mods are also cross platfrom to any platform that supports them.

** Directory Structure
   :PROPERTIES:
   :DESCRIPTION: how things should look.
   :END:

   Your project directory should look something like this:

   #+BEGIN_SRC fundamental
   project
   ├── bundles
   ├── content
   │   ├── blocks
   │   └── items
   ├── mod.json
   ├── sounds
   └── sprites
   #+END_SRC

   Every platform has a different user application data directory, and this is where your mods should be placed:
   * Linux: =~/.local/share/Mindustry/mods/=
   * Steam: =steam/steamapps/common/Mindustry/mods/=
   * Windows: =%appdata%/Mindustry/mods/=

** ~mod.json~
   :PROPERTIES:
   :DESCRIPTION: the project configuration file.
   :END:


   At the root of your project directory, you must have a ~mod.json~ which defines the basic metadata for your project.

   #+BEGIN_SRC json
   {
       "name": "Mod Name",
       "author": "Yourself",
       "description": "This is a useless description.",
       "version": "1.0",
       "dependencies": [ ]
   }
   #+END_SRC

   Notes:
   * ~name~ will be used to reference to your mod, so name it carefully, and avoid giving it the same name as another mod.
   * ~description~ of the mod will be rendered in the ingame mod manager, so keep it short and to the point.
   * ~dependencies~ is optional; if you want to know more about that, go to the [[Dependencies][dependencies]] section.

** Content
   :PROPERTIES:
   :DESCRIPTION: content configuration directory
   :END:

   At the root of your project directory you can have a ~content/~ directory, this is where all the JSON data goes for your content types, and in this directory you have subdirectories for the various types of units, these are the current common ones:

   * ~content/items/~ for things like copper and surge-alloy;
   * ~content/blocks/~ for things like turrets and floors;
   * ~content/mechs/~ for player controlled mechs tau and dagger;
   * ~content/liquids/~ for liquids like water and slag;
   * ~content/units/~ for flying or ground units like reaper and dagger;
   * ~content/zones/~ for configuration of campaign maps.

   This is important, because it's how Mindustry will know which types to lookup. -- How you name your files is also important as the stem ~name~ of your path ~content/blocks/<name>.json~ is going to be used to reference it.

** Sprites
   :PROPERTIES:
   :DESCRIPTION: image files and how to name them
   :END:

   Custom sprites can be added by simply dropping them in the ~sprites/~ subdirectory. The content parser will look through it recursively. One format is needed.

   Content is going to look for sprites relative to it's own name. ~content/blocks/my-hail.json~ has the name ~my-hail~ and similarly ~sprites/my-hail.png~ has the name ~my-hail~ and will be used for that specific block.

   Content may look for multiple sprites, and this is done by looking for suffixes. ~my-hail~ could be a turret and it could look for the suffix ~<name>-heat~ and what this means is it'll look for ~my-hail-heat~.

   You can find all the vanilla sprites here:
   * https://github.com/Anuken/Mindustry/tree/master/core/assets-raw/sprites

   Another thing to know about sprites is that they're passed through /anti-aliasing filters/ and what that means is that they may look a little different in game. The turrets specifically have a black border added to them, meaning you must draw them smaller then the image itself.

** Sound
   :PROPERTIES:
   :DESCRIPTION: sound files and where to put them
   :END:

  Custom sounds can be added through the modding system by dropping them in the ~sounds/~ subdirectory. It doesn't matter where you put them. Two formats are needed:

  * ~.ogg~ required for Desktop/Android
  * ~.mp3~ required for iOS

  Just like any other assets, you reference them by the stem of your filenames, so ~pewpew.ogg~ and ~pewpew.mp3~ can be referenced with ~pewpew~ from a field of type ~Sound~.

  Here's a list of built-in sounds:
  * ~artillery~
  * ~back~
  * ~bang~
  * ~beam~
  * ~bigshot~
  * ~boom~
  * ~break~
  * ~build~
  * ~buttonClick~
  * ~click~
  * ~conveyor~
  * ~corexplode~
  * ~door~
  * ~drill~
  * ~empty~
  * ~explosionbig~
  * ~explosion~
  * ~fire~
  * ~flame2~
  * ~flame~
  * ~laserbig~
  * ~laser~
  * ~machine~
  * ~message~
  * ~missile~
  * ~pew~
  * ~place~
  * ~press~
  * ~release~
  * ~respawning~
  * ~respawn~
  * ~shootBig~
  * ~shoot~
  * ~shootSnap~
  * ~shotgun~
  * ~spark~
  * ~splash~
  * ~spray~
  * ~thruster~
  * ~unlock~
  * ~wave~
  * ~windowHide~

** Dependencies
   :PROPERTIES:
   :DESCRIPTION: mods extending mods
   :END:

   You can add dependencies to your mod by simple adding other mods name in your ~mod.json~:

   #+BEGIN_SRC json
   {
       "dependencies": [
           "other-mod-name",
           "not-a-mod"
       ]
   }
   #+END_SRC

   The name of dependencies are lower-cased and spaces are replaced with ~-~ hyphens, for example ~Other MOD NamE~ becomes ~other-mod-name~.

   To reference the other mods assets, you must prefix the asset with the other mods name:

   * ~other-mod-name-not-copper~ would reference ~not-copper~ in ~other-mod-name~
   * ~other-mod-name-angry-dagger~ would reference ~angry-dagger~ in ~other-mod-name~
   * ~not-a-mod-angry-dagger~ would reference ~angry-dagger~ in ~not-a-mod~

** Units
   :PROPERTIES:
   :DESCRIPTION: conversion of units to real game time.
   :END:

   * ~time~ in game is calculated through ~ticks~;
   * ~ticks~ (sometimes called ~frames~) are assumed to be 60/1 second;
   * ~range~ or ~speed~ is calculated by 1/10 of a tile;
   * to calculate range out of ~lifetime~ and ~speed~ you can do ~lifetime * speed = range~.

** Bundles
   :PROPERTIES:
   :DESCRIPTION: translations and renaming
   :END:

   An optional addition to your mod is called bundles. The main use of bundles are give translations of your content, but there's no reason you couldn't use them in English. These are plaintext files which go in the ~bundles/~ subdirectory, and they should be named something like ~bundle_ru.properties~ (for Russian).

   The contents of this file is very simple:

   #+BEGIN_SRC fundamental
   block.example-mod-silver-wall.name = Серебряная Стена
   block.example-mod-silver-wall.description = Стена из серебра.
   #+END_SRC

   If you've read the first few sections of this guide, you'll spot it right away:
   * ~<content type>.<mod name>-<content name>.name~
   * ~<content type>.<mod name>-<content name>.description~

   Notes:
   * mod/content names are lowercased and hyphen separated.

   List of content type:
   * ~item~
   * ~block~
   * ~mech~
   * ~bullet~
   * ~liquid~
   * ~status~
   * ~unit~
   * ~weather~
   * ~effect~
   * ~zone~
   * ~loadout~
   * ~typeid~

   List of filenames relative to languages:

   * English ~bundle.properties~ 
   * Czech ~bundle_cs.properties~ 
   * German ~bundle_de.properties~ 
   * Spanish ~bundle_es.properties~ 
   * Estonian ~bundle_et.properties~ 
   * Basque ~bundle_eu.properties~ 
   * French BE ~bundle_fr_BE.properties~ 
   * French ~bundle_fr.properties~ 
   * Bergabung ~bundle_in_ID.properties~ 
   * Italian ~bundle_it.properties~ 
   * Japanese ~bundle_ja.properties~ 
   * Korean ~bundle_ko.properties~ 
   * Dutch BE ~bundle_nl_BE.properties~ 
   * Dutch ~bundle_nl.properties~ 
   * Polish ~bundle_pl.properties~ 
   * Portuguese BR ~bundle_pt_BR.properties~ 
   * Portuguese  ~bundle_pt.properties~ 
   * Russian ~bundle_ru.properties~ 
   * Danish ~bundle_sv.properties~ 
   * Turkish ? ~bundle_tk.properties~ 
   * Turkish ? ~bundle_tr.properties~ 
   * Ukrainian ~bundle_uk_UA.properties~ 
   * Chinese CN ~bundle_zh_CN.properties~ 
   * Chinese TW ~bundle_zh_TW.properties~ 

** Types
   :PROPERTIES:
   :DESCRIPTION: things to know about types
   :END:

   Types have numerous fields, but the important one is ~type~; this is a special field used by the content parser, that changes which type your object is. /No a ~Router~ type can't be a ~Turret~ type/, they have completely different methods and fields.

   Types /extend/ each other, and what that means is if ~MissileBulletType~ extends ~BasicBulletType~, then you'll have access to all the fields of ~BasicBulletType~ inside of ~MissileBulletType~ like ~damage~, ~lifetime~ and ~speed~. Fields are case sensitive: ~hitSize =/= hitsize~.

   What you can expect a field to do is up to the specific type, some types do absolutely nothing with their fields, and work mostly as a base types will extend from. One such type is ~Block~.

   ~type~ can be refer to the actual type field of the object. A type may also refer to other things like ~float~ is a type so it means you can type ~0.3~ in a field.


   #+BEGIN_SRC json
   {
       "type": "Revenant",
       "weapon": {
           "bullet": {
               "type": "MissileBulletType",
               "damage": 9000
           }
       }
   }
   #+END_SRC

   Here you can see, the type of the top level object is ~Revenant~, but the type of the ~bullet~ is ~BulletType~ so you can use ~MissileBulletType~, because ~MissileBulletType~ extends ~BulletType~.

*** Abstract


    All you need to know about abstract types, is this is a Java specific term that means you cannot instantiate/initialized this specific type by itself. If you do so you'll probably get an /initialization exception/ of some kind.




* World
  :PROPERTIES:
  :DESCRIPTION: the universe and everything in it.
  :END:
** Block

  Extends [[BlockStorage][BlockStorage]] -- Fields for all objects that are blocks.

  | field               | type            |      default | notes      |
  |---------------------+-----------------+--------------+------------|
  |                     |                 |          <r> | <10>       |
  | update              | boolean         |              | whether this block has a tile entity that updates |
  | destructible        | boolean         |              | whether this block has health and can be destroyed |
  | unloadable          | boolean         |         true | whether unloaders work on this block |
  | solid               | boolean         |              | whether this is solid |
  | solidifes           | boolean         |              | whether this block CAN be solid. |
  | rotate              | boolean         |              | whether this is rotateable |
  | breakable           | boolean         |              | whether you can break this with rightclick |
  | placeableOn         | boolean         |         true | whether this [[Floor][floor]] can be placed on. |
  | insulated           | boolean         |        false | whether this block has insulating properties. |
  | health              | int             |           -1 | tile entity health |
  | baseExplosiveness   | float           |            0 | base block explosiveness |
  | floating            | boolean         |        false | whether this block can be placed on edges of liquids. |
  | size                | int             |            1 | multiblock size |
  | expanded            | boolean         |        false | Whether to draw this block in the expanded draw range. |
  | timers              | int             |            0 | Max of timers used. |
  | fillesTile          | true            |              | Special flag; if false, [[Floor][floor]] will be drawn under this block even if it is cached. |
  | alwaysReplace       | boolean         |        false | whether this block can be replaced in all cases |
  | group               | [[BlockGroup][BlockGroup]]      |         none | Unless ~canReplace~ is overriden, blocks in the same group can replace each other. |
  | priority            | TargetPriority  |         base | Targeting priority of this block, as seen by enemies. |
  | configurable        | boolean         |              | Whether the block can be tapped and selected to configure. |
  | consumesTap         | boolean         |              | Whether this block consumes touchDown events when tapped. |
  | posConfig           | boolean         |              | Whether the config is positional and needs to be shifted. |
  | targetable          | boolean         |         true | Whether units target this block. |
  | canOverdrive        | boolean         |         true | Whether the overdrive core has any effect on this block. |
  | outlineColor        | [[Color][Color]]           |       404049 | Outlined icon color. |
  | outlineIcon         | boolean         |        false | Whether the icon region has an outline added. |
  | hasShadow           | boolean         |         true | Whether this block has a shadow under it. |
  | breakSound          | [[Sound][Sound]]           |         boom | Sounds made when this block breaks. |
  | activeSound         | [[Sound][Sound]]           |         none | The sound that this block makes while active. One sound loop. Do not overuse. |
  | activeSoundVolume   | float           |          0.5 | Active sound base volume. |
  | idleSound           | [[Sound][Sound]]           |         none | The sound that this block makes while idle. Uses one sound loop for all blocks. |
  | idleSoundVolume     | float           |          0.5 | Idle sound base volume. |
  | requirements        | [[ItemStack][ItemStack]]       |              | Cost of constructing and researching this block. |
  | category            | [[Category][Category]]        | distribution | Category in place menu. |
  | buildCost           | float           |              | Cost of building this block; do not modify directly! |
  | buildVisibility     | [[BuildVisibility][BuildVisibility]] |       hidden | Whether this block is visible and can currently be built. |
  | buildCostMultiplier | float           |            1 | Multiplier for speed of building this block. |
  | instantTransfer     | boolean         |        false | Whether this block has instant transfer. |
  | alwaysUnlocked      | boolean         |        false |            |
  | layer               | [[Layer][Layer]]           |         null | Layer to draw extra stuff on. |
  | layer2              | [[Layer][Layer]]           |         null | Extra layer to draw extra stuff on. |

  Notes:
  * research cost is ~30 + <requirements> * 6~

** Consumers

   This type is commonly used in block type with it's field ~consumes~, it's a type that allows your block to consume something, and how this field works is up to the specific type extension you're using.

   | field         | type                  | notes      |
   |---------------+-----------------------+------------|
   |               |                       | <10>       |
   | item          | String                | shorthand for =items= |
   | items         | ConsumeItems          |            |
   | liquid        | ConsumeLiquid         |            |
   | power         | float or ConsumePower |            |
   | powerBuffered | float                 | for batteries |

   Notes:
   * you shouldn't have ~power~ and ~powerBuffered~

   For example with [[ConsumeItems][ConsumeItems]]:
   #+BEGIN_SRC json
   {
       "items": {
           "items": [ { "amount": 10, "item": "copper" } ],
           "booster": true,
           "optional": true
       }
   }
   #+END_SRC
*** Consume

    [[Abstract]] type base, that defines a type of resource that a block can consume.

    | field    | type    | default | notes      |
    |----------+---------+---------+------------|
    |          |         |         | <10>       |
    | optional | boolean |         | consumer will not influence consumer validity. |
    | booster  | boolean |         | consumer will be displayed as a boost input. |
    | update   | boolean | true    |            |

*** ConsumeItems
    Extends [[Consume][Consume]] -- To consume an itemstack.

    | field | type      |
    |-------+-----------|
    | items | [[ItemStack][ItemStack]] |

*** ConsumeLiquidBase

    [[Abstract]] type which extends [[Consume][Consume]]

    | field      | type  | default | notes      |
    |------------+-------+---------+------------|
    |            |       |         | <10>       |
    | float      | final |         | amount used per frame |
    | timePeriod | float |      60 | how much time is taken to use this liquid |

    Notes:
    * ~timePeriod~ example: a normal ConsumeLiquid with 10/s and a 10 second timePeriod would display as "100 seconds", but without a time override it would display as "10 liquid/second". This is used for generic crafters.

*** ConsumeLiquid
    Extends [[ConsumeLiquidBase][ConsumeLiquidBase]] -- To consume a liquid type.


    | field  | type   | default |
    |--------+--------+---------|
    | liquid | [[Liquid][Liquid]] | null    |
    | amount | float  | 0       |

*** ConsumePower
    Extends [[Consume][Consume]] -- To consume or buffer power.

    | field    | type    | default | notes      |
    |----------+---------+---------+------------|
    |          |         |         | <10>       |
    | usage    | float   |         | The maximum amount of power which can be processed per tick. |
    | capacity | float   |         | The maximum power capacity in power units. |
    | buffered | boolean |         | True if the module can store power. |

    Notes:
    * ~usage~ might influence efficiency or load a buffer.
** BlockStorage
   [[Abstract]] type that extends [[UnlockableContent and MappableContent][UnlockableContent]] -- This is for blocks that can store a buffer of items.

   | field          | type      | default |
   |----------------+-----------+---------|
   |                |           |     <r> |
   | hasItems       | boolean   |         |
   | hasLiquids     | boolean   |         |
   | hasPower       | boolean   |         |
   | outputsLiquid  | boolean   |   false |
   | consumesPower  | boolean   |    true |
   | outputsPower   | bolean    |   false |
   | itemCapacity   | int       |      10 |
   | liquidCapacity | float     |      10 |
   | item           | float     |      10 |
   | consumes       | [[Consumers][Consumers]] |         |

** Environment

   Environmental blocks are blocks that must be placed from the editor, and they're the ones that will generally dictate how the game can or will be played. These blocks wont appear on a map unless you've built a map to support them.

*** Floor
    Extends [[Block][Block]] -- Environmental floors. Requires a sprite, so to be visible in the map editor.

    | field             | type         | default | notes      |
    |-------------------+--------------+---------+------------|
    |                   |              |     <r> | <10>       |
    | variants          | int          |       3 | number of different variant regions to use. |
    | edge              | String       |   stone | edge fallback, used mainly for ores. |
    | speedMultiplier   | float        |       1 | multiplies unit velocity by this when walked on. |
    | dragMultiplier    | float        |       0 | multiplies unit drag by this when walked on. |
    | damageTaken       | float        |       0 | damage taken per tick on this tile. |
    | drownTime         | float        |       0 | how many ticks it takes to drown on this. |
    | walkEffect        | [[Effect][Effect]]       |  ripple | effect when walking on this [[Floor][floor]]. |
    | drownUpdateEffect | [[Effect][Effect]]       |  bubble | effect displayed when drowning on this [[Floor][floor]]. |
    | status            | StatusEffect |    none | status effect applied when walking on. |
    | statusDuration    | float        |      60 | intensity of applied status effect. |
    | liquidDrop        | [[Liquid][Liquid]]       |         | liquids that drop from this block, used for pumps. |
    | itemDrop          | [[Item][Item]]         |         | item that drops from this block, used for drills. |
    | isLiquid          | boolean      |         | whether this block can be drowned in. |
    | playerUnmineable  | boolean      |   false | block cannot be mined by players if true. |
    | blendGroup        | [[Block][Block]]        |    this | group of blocks that this block does not draw edges on. |
    | updateEffect      | [[Effect][Effect]]       |    none | effect displayed when randomly updated. |
    | attributes        | [[Attributes][Attributes]]   |         | array of affinities to certain things. |

    Sprite lookup names:
    - ~<name><1..>~

*** OverlayFloor

    Extends [[Floor][Floor]] -- A type of floor that is overlaid on top of other floors.

    For example:
    * ~tendrils~

*** DoubleOverlayFloor

    Extends [[OverlayFloor][OverlayFloor]]

    For example:
    * ~pebbles~

*** OreBlock

    Extends [[OverlayFloor][OverlayFloor]] -- An overlay ore for a specific item type.

    | field    | default |
    |----------+---------|
    |          |     <r> |
    | variants |       3 |

*** Rock

    Extends [[Block][Block]]

    | field    | type |
    |----------+------|
    | variants | int  |

    Defaults:
    | field         | default |
    |---------------+---------|
    |               |     <r> |
    | breakable     |    true |
    | alwaysReplace |    true |

*** StaticWall

    Extends [[Rock][Rock]]

    Defaults:
    | field         | default |
    |---------------+---------|
    |               |     <r> |
    | breakable     |   false |
    | alwaysReplace |   false |
    | solid         |    true |
    | variants      |       2 |

    Extra Sprites:
    * ~<name>-large.png~ which is a 2x2 variant of the block.

*** StaticTree

    Extends [[StaticWall][StaticWall]]

    For example:
    * ~spore-pine~
    * ~snow-pine~
    * ~pine~
    * ~shrubs~

*** TreeBlock

    Extends [[Block][Block]]

    Defaults:
    | field    | default |
    |----------+---------|
    | solid    | true    |
    | layer    | power   |
    | expanded | true    |
** Crafting
*** GenericCrafter
    Extends [[Block][Block]]

    | field              | type        | default |
    |--------------------+-------------+---------|
    |                    |             |     <r> |
    | outputItem         | [[ItemStack][ItemStack]]   |         |
    | outputLiquid       | [[LiquidStack][LiquidStack]] |         |
    | craftTime          | float       |      80 |
    | craftEffect        | [[Effect][Effect]]      |    none |
    | updateEffect       | [[Effect][Effect]]      |    none |
    | updateEffectChance | float       |    0.04 |

    Defaults:
    | field           | default |
    |-----------------+---------|
    |                 |     <r> |
    | update          |    true |
    | solid           |    true |
    | hasItems        |    true |
    | health          |      60 |
    | idleSound       | machine |
    | idleSoundVolume |    0.03 |

*** GenericSmelter
    Extends [[GenericCrafter][GenericCrafter]] -- A GenericCrafter with a new glowing region drawn on top.

    | field      | type  | default |
    |------------+-------+---------|
    |            |       |     <r> |
    | flameColor | [[Color][Color]] |  ffc999 |

    Sprite suffix:
    * ~-top~

*** Separator
    Extends [[Block][Block]]

    Separator will take liquid as an input and produce items from it's stack randomly relative to their amount.

    | field            | type      | default | notes      |
    |------------------+-----------+---------+------------|
    |                  |           |         | <10>       |
    | results          | [[ItemStack][ItemStack]] |         | *[required]* |
    | craftTime        | float     |         |            |
    | spinnerRadius    | float     |     2.5 |            |
    | spinnerLength    | float     |       1 |            |
    | spinnerThickness | float     |       1 |            |
    | spinnerSpeed     | float     |       2 |            |
    | color            | [[Color][Color]]     |  858585 |            |
    | liquidRegion     | int       |         |            |

    Defaults:
    | field      | default |
    |------------+---------|
    |            |     <r> |
    | update     |    true |
    | solid      |    true |
    | hasItems   |    true |
    | hasLiquids |    true |

    Sprite suffixes:
    * ~-liquid~
** Sandbox
*** PowerVoid
    Extends [[PowerBlock][PowerBlock]]

    Deafults:

    | field         |   default |
    |---------------+-----------|
    |               |       <r> |
    | consumesPower | MAX_VALUE |

*** PowerSource
    Extends [[PowerNode][PowerNode]]

    Defaults:

    | field         | default |
    |---------------+---------|
    |               |     <r> |
    | maxNodes      |     100 |
    | outputsPower  |    true |
    | consumesPower |   false |

*** ItemSource
    Extends [[Block][Block]]

    Defaults:

    | field        |        default |
    |--------------+----------------|
    |              |            <r> |
    | hasItems     |           true |
    | update       |           true |
    | soild        |           true |
    | group        | transportation |
    | configurable |           true |

*** ItemVoid
    Extends [[Block][Block]]

    Defaults:

    | field  | default |
    |--------+---------|
    |        |     <r> |
    | update |    true |
    | soild  |    true |

*** LiquidSource
    Extends [[Block][Block]]

    Defaults:

    | field          | default |
    |----------------+---------|
    |                |     <r> |
    | hasLiquids     |    true |
    | update         |    true |
    | soild          |    true |
    | liquidCapacity |     100 |
    | configurable   |    true |
    | outputsLiquid  |    true |

** Logic
*** MessageBlock
    Extends [[Block][Block]]

    | field         | type | default |
    |---------------+------+---------|
    |               |      |     <r> |
    | maxTextLength | int  |     220 |
    | maxNewlines   | int  |      24 |

    Defaults:

    | field        | default |
    |--------------+---------|
    |              |     <r> |
    | soild        |    true |
    | configurable |    true |
    | destructible |    true |
** Defense
*** Wall
    Extends [[Block][Block]]

    | field    | type | default |
    |----------+------+---------|
    |          |      | <r>     |
    | variants | int  |       0 |

    Defaults:

    | field               | default |
    |---------------------+---------|
    |                     |     <r> |
    | solid               |    true |
    | destructible        |    true |
    | group               |   walls |
    | buildCostMultiplier |       5 |

*** DeflectorWall
    Extends [[Wall][Wall]] -- Wall that deflects low damage bullets.

    | field            | type  | default |
    |------------------+-------+---------|
    |                  |       |     <r> |
    | hitTime          | float |      10 |
    | maxDamageDeflect | float |      10 |

*** SurgeWall
    Extends [[Wall][Wall]] -- Wall that creates lightning when shot.

    | field           | type  | default |
    |-----------------+-------+---------|
    |                 |       |     <r> |
    | lightningChance | float |    0.05 |
    | lightningDamage | float |      15 |
    | lightningLength | int   |      17 |

*** Door
    Extends [[Wall][Wall]]

    | field   | type   |   default |
    |---------+--------+-----------|
    |         |        |       <r> |
    | openfx  | [[Effect][Effect]] |  dooropen |
    | closefx | [[Effect][Effect]] | doorclose |

    Defaults:

    | field       | default |
    |-------------+---------|
    | solid       | false   |
    | solidfies   | true    |
    | consumesTap | true    |

    Sprites:
    * ~<name>-open~

*** MendProjector
    Extends [[Block][Block]]

    | field           | type  | default |
    |-----------------+-------+---------|
    |                 |       |     <r> |
    | color           | [[Color][Color]] |  84f491 |
    | phase           | [[Color][Color]] |  ffd59e |
    | reload          | float |     250 |
    | range           | float |      60 |
    | healPercent     | float |      12 |
    | phaseBoost      | float |      12 |
    | phaseRangeBoost | float |      50 |
    | useTime         | float |     400 |

    Sprites:
    * ~<name>-top~

*** OverdriveProjector
    Extends [[Block][Block]]

    | field           | type  | default |
    |-----------------+-------+---------|
    |                 |       |     <r> |
    | color           | [[Color][Color]] |  feb380 |
    | phase           | [[Color][Color]] |  ffd59e |
    | reload          | float |      60 |
    | range           | float |      80 |
    | speedBoost      | float |     1.5 |
    | speedBoostPhase | float |    0.75 |
    | useTime         | float |     400 |
    | phaseRangeBoost | float |      20 |


    Defaults:
    | field        | default |
    |--------------+---------|
    | solid        | true    |
    | update       | true    |
    | hasPower     | true    |
    | hasItems     | true    |
    | canOverdrive | false   |

    Sprites:
    * ~<name>-top~

*** ForceProjector

    Extends [[Block][Block]]

    | field              | type  | default |
    |--------------------+-------+---------|
    | phaseUseTime       | float |     350 |
    | phaseRadiusBoost   | float |      80 |
    | radius             | float |   101.7 |
    | breakage           | float |     550 |
    | cooldownNormal     | float |    1.75 |
    | cooldownLiquid     | float |     1.5 |
    | cooldownBrokenBase | float |    0.35 |
    | basePowerDraw      | float |     0.2 |
    | powerDamage        | float |     0.1 |

    Defaults:
    | field        | default     |
    |--------------+-------------|
    | update       | true        |
    | solid        | true        |
    | hasPower     | true        |
    | canOverdrive | false       |
    | hasLiquids   | true        |
    | hasItems     | true        |
    | consumes     | [[cold-liquid]] |

    <<cold-liquid>>:
    * temperature less then 0.5
    * flammability less then 0.1
    * booster true
    * optional true
    * update false

    Sprites:
    * ~<name>-top~

*** ShockMine
    Extends [[Block][Block]]

    | field      | type  | default |
    |------------+-------+---------|
    | cooldown   | float |      80 |
    | tileDamage | float |       5 |
    | damage     | float |      13 |
    | length     | int   |      10 |
    | tendrils   | int   |       6 |

    Defaults:
    | field        | default |
    |--------------+---------|
    |              |     <r> |
    | update       |   false |
    | destructible |    true |
    | solid        |   false |
    | targetable   |   false |
    | layer        | overlay |
** Turrets

   This section is for turret types. All turrets shoot [[BulletType]], and this means [[LiquidTurret]] can shoot [[MissileBulletType]] and [[ItemTurret]] can shoot [[LiquidBulletType]].

*** Turret

    [[Abstract]] type which extends [[Block][Block]] -- All turrets extend from [[Turret]], which holds all the common fields.

    | field         | type    |    default | notes      |
    |---------------+---------+------------+------------|
    |               |         |            | <10>       |
    | heatColor     | [[Color][Color]]   | turretHeat |            |
    | shootEffect   | [[Effect][Effect]]  |       none |            |
    | smokeEffect   | [[Effect][Effect]]  |       none |            |
    | ammoUseEffect | [[Effect][Effect]]  |       none |            |
    | shootSound    | [[Sound][Sound]]   |      shoot |            |
    | ammoPerShot   | int     |          1 |            |
    | ammoEjectBack | float   |          1 |            |
    | range         | float   |         50 |            |
    | reload        | float   |         10 |            |
    | inaccuracy    | float   |          0 |            |
    | shots         | int     |          1 |            |
    | spread        | float   |          4 |            |
    | recoil        | float   |          1 |            |
    | restitution   | float   |       0.02 |            |
    | cooldown      | float   |       0.02 |            |
    | rotatespeed   | float   |          5 | in degrees per tick |
    | shootCone     | float   |          8 |            |
    | shootShake    | float   |          0 |            |
    | xRand         | float   |          0 |            |
    | targetAir     | boolean |       true |            |
    | targetGround  | boolean |       true |            |

    Defaults:

    | field       | default |
    |-------------+---------|
    | priority    | turret  |
    | update      | true    |
    | solid       | true    |
    | layer       | turret  |
    | group       | turrets |
    | outlineIcon | true    |

*** CooledTurret

    Extends [[Turret][Turret]] -- This is a base type that turrets which use [[Liquid]] to cool themselves extend from.

    | field             | type   | default | notes      |
    |-------------------+--------+---------+------------|
    |                   |        |         | <10>       |
    | coolantMultiplier | float  | 5       | How much reload is lowered by for each unit of liquid of heat capacity. |
    | coolEffect        | [[Effect][Effect]] | shoot   |            |

    Notes:
    * doesn't take flammable fluid
    * doesn't take hot fluid

*** ItemTurret

    Extends [[CooledTurret][CooledTurret]] -- Turrets that uses items as ammo. The ~ammo~ field is simple an object of items names, paired with an [[BulletType]].

    #+BEGIN_SRC json
    {
        "ammo": {
            "copper": "standardCopper",
            "metaglass": {
                "type": "MissileBulletType",
                "damage": 2
            }
        }
    }
    #+END_SRC

    Here we're using ~copper~ to shoot ~standardCopper~ (built-in bullet) and ~metalglass~ to shoot a custom bullet type.

    | field   | type                 | default |
    |---------+----------------------+---------|
    | maxAmmo | int                  |      30 |
    | ammo    | { [[Item][Item]]: [[BulletType][BulletType]] } |         |

    Defaults:

    | field    | default |
    |----------+---------|
    | hasItems | true    |

*** DoubleTurret
    Extends [[ItemTurret][ItemTurret]] -- Turret that shoots from two side by side barrels.

    | field     | type  | default |
    |-----------+-------+---------|
    | shotWidth | float |       2 |

    Default:
    | field | default |
    |-------+---------|
    | shots |       2 |

*** ArtilleryTurret
    Extends [[ItemTurret][ItemTurret]] -- Artillery turrets have special shooting calculations done to hit targets.

    | field     | default |
    |-----------+---------|
    | targetAir | false   |

*** BurstTurret
    Extends [[ItemTurret][ItemTurret]] -- Turrets capable of bursts of specially spaced bullets, separated by long reload times.

    | field        | type  | default |
    |--------------+-------+---------|
    | burstSpacing | float |       5 |
*** PowerTurret
    [[Abstract]] type that extends [[CooledTurret][CooledTurret]] -- Turret which uses power has ammo to shoot.

    | field     | type       | default |
    |-----------+------------+---------|
    | shootType | [[BulletType][BulletType]] |         |
    | powerUse  | float      |       1 |

    Defaults:

    | field    | default |
    |----------+---------|
    | hasPower | true    |

*** ChargeTurret

    Extends [[PowerTurret]]

    | field             | type   | default |
    |-------------------+--------+---------|
    | chargeTime        | float  |      30 |
    | chargeEffects     | int    |       5 |
    | chargeMaxDelay    | float  |      10 |
    | chargeEffect      | [[Effect]] |    none |
    | chargeBeginEffect | [[Effect]] |    none |

*** LaserTurret
    Extends [[PowerTurret][PowerTurret]]

    | field           | type  | default | notes      |
    |-----------------+-------+---------+------------|
    |                 |       |         | <10>       |
    | firingMoveFract | float |    0.25 | rotatespeed fraction when turret is shooting |
    | shootDuration   | float |     100 |            |

    Defaults:
    | field             | default |
    |-------------------+---------|
    | canOverdrive      | false   |
    | coolantMultiplier | 1       |

    Doesn't update shoot if:
    * liquid temperature greater or equal to ~0.5~
    * liquid flammability greater then ~0.1~

*** LiquidTurret
    Extends [[Turret]]

    | fields | type                 |
    |--------+----------------------|
    | ammo   | { [[Item]]: [[BulletType]] } |

    Defaults:
    | fields      | default |
    |-------------+---------|
    | hasLiquids  | true    |
    | activeSound | spray   |
** Distribution
*** Conveyor
    Extends [[Block][Block]]

    | field | type  | default |
    |-------+-------+---------|
    | speed | float |       0 |

    Default:

    | field           |        default |
    |-----------------+----------------|
    |                 |            <r> |
    | rotate          |           true |
    | update          |           true |
    | layer           |        overlay |
    | group           | transportation |
    | hasItems        |           true |
    | itemCapacity    |              4 |
    | idleSound       |       conveyor |
    | idleSoundVolume |          0.004 |
    | unloadable      |          false |

    Sprite suffix:
    * ~-<0..4>-<0..3>~ example: [[https://github.com/Anuken/Mindustry/tree/master/core/assets-raw/sprites/blocks/distribution/conveyors][Conveyors-sprites]]

*** ArmoredConveyor
    Extends [[Conveyor][Conveyor]]  -A type of conveyor don't accept item coming from side

*** Junction
    Extends [[Block][Block]]

    | field    | type     | default | notes      |
    |----------+----------+---------+------------|
    |          |          |         | <10>       |
    | speed    | float    |      26 | frames taken to go through this junction |
    | capacity | capacity |       6 |            |

    Defaults:
    | field           | default        |
    |-----------------+----------------|
    | update          | true           |
    | solid           | true           |
    | instantTransfer | true           |
    | group           | transportation |
    | unloadable      | false          |

*** ItemBridge
    Extends [[Block][Block]]

    | field         | type  | default |
    |---------------+-------+---------|
    | range         | int   |         |
    | transportTime | float |       2 |

    Defaults:
    | field        | default        |
    |--------------+----------------|
    | update       | true           |
    | solid        | true           |
    | hasPower     | true           |
    | layer        | power          |
    | expanded     | true           |
    | itemCapacity | 10             |
    | posConfig    | true           |
    | configurable | true           |
    | hasItems     | true           |
    | unloadable   | false          |
    | group        | transportation |

    Sprites:
    * ~<name>-end~ example: [[https://raw.githubusercontent.com/Anuken/Mindustry/master/core/assets-raw/sprites/blocks/distribution/bridge-conveyor-end.png][bridge-conveyor-end]]
    * ~<name>-bridge~ example: [[https://raw.githubusercontent.com/Anuken/Mindustry/master/core/assets-raw/sprites/blocks/distribution/bridge-conveyor-bridge.png][bridge-conveyor-bridge]]
    * ~<name>-arrow~ example: [[https://raw.githubusercontent.com/Anuken/Mindustry/master/core/assets-raw/sprites/blocks/distribution/bridge-conveyor-arrow.png][bridge-conveyor-arrow]]

*** ExtendingItemBridge
    Extends [[ItemBridge][ItemBridge]]

    Defaults:
    | field    | default |
    |----------+---------|
    | hasItems | true    |

*** BufferedItemBridge
    Extends [[ExtendingItemBridge][ExtendingItemBridge]]

    | field          | type  | default |
    |----------------+-------+---------|
    | speed          | float |      40 |
    | bufferCapacity | int   |      50 |

    Defaults:
    | field    | default |
    |----------+---------|
    | hasItems | true    |
    | hasPower | false   |

*** Sorter

    Extends [[Block][Block]]

    | field  | type    | default | notes        |
    |--------+---------+---------+--------------|
    | invert | boolean |         | *[optional]* |

    Defaults:

    | field           | default        |
    |-----------------+----------------|
    | update          | true           |
    | solid           | true           |
    | instantTransfer | true           |
    | group           | transportation |
    | configurable    | true           |
    | unloadable      | false          |

*** OverflowGate
    Extends [[Block][Block]]

    | field | type  | default |
    |-------+-------+---------|
    | speed | float | 1       |

    Defaults:

    | field      | default        |
    |------------+----------------|
    | hasItems   | true           |
    | soild      | true           |
    | update     | true           |
    | group      | transportation |
    | unloadable | false          |

*** MassDriver
    Extends [[Block][Block]] -- Uses ~driverBolt~ to transfer items.

    | field         | type   |        default |
    |---------------+--------+----------------|
    | range         | float  |                |
    | rotateSpeed   | float  |           0.04 |
    | translation   | float  |              7 |
    | minDistribute | int    |             10 |
    | knockback     | float  |              4 |
    | reloadTime    | float  |            100 |
    | shootEffect   | [[Effect][Effect]] |      shootBig2 |
    | smokeEffect   | [[Effect][Effect]] | shootBigSmoke2 |
    | recieveEffect | [[Effect][Effect]] |        mineBig |
    | shake         | float  |              3 |

    Notes:
    * range is limited by ~driverBolt~'s max range, which is hard coded, so you cannot change it.

    Defaults:
    | field        | default |
    |--------------+---------|
    | update       | true    |
    | solid        | true    |
    | posConfig    | true    |
    | configurable | true    |
    | hasItems     | true    |
    | layer        | turret  |
    | hasPower     | true    |
    | outlineIcon  | true    |

    Sprites:
    * ~<name>-base~
** Liquid Blocks
*** LiquidBlock
    Extends [[Block][Block]] -- For blocks that can carry liquids. Apart from the better defaults, it also fetches extra sprites.

    Defaults:

   | field         | default |
   |---------------+---------|
   | update        | true    |
   | solid         | true    |
   | hasLiquids    | true    |
   | group         | liquids |
   | outputsLiquid | true    |

   Sprites:
   * ~<name>-liquid~
   * ~<name>-top~
   * ~<name>-bottom~

*** Pump
    Extends [[LiquidBlock][LiquidBlock]]

    | field      | type  | default |
    |------------+-------+---------|
    | pumpAmount | float |       1 |

    | field    | default |
    |----------+---------|
    | layer    | overlay |
    | group    | liquids |
    | floating | true    |

*** Conduit
    Extends [[LiquidBlock][LiquidBlock]]

    Defaults:

    | field    | default |
    |----------+---------|
    | rotate   | true    |
    | solid    | false   |
    | floating | true    |

    Sprite lookup name /(where ~i~ can be anything from 0-6)/:
    * ~<name>-top-<i>~

*** LiquidRouter
    Extends [[LiquidBlock][LiquidBlock]]

*** LiquidTank
    Extends [[LiquidRouter][LiquidRouter]]

*** LiquidJunction
    Extends [[LiquidBlock][LiquidBlock]]

    | field      | default |
    |------------+---------|
    | hasLiquids | true    |

*** LiquidBridge
    Extends [[LiquidBridge][LiquidBridge]]

    | field         | default |
    |---------------+---------|
    | hasItems      | false   |
    | hasLiquids    | true    |
    | outputsLiquid | true    |
    | group         | liquids |

*** LiquidExtendingBridge
    Extends [[ExtendingItemBridge][ExtendingItemBridge]]

    | field         | default |
    |---------------+---------|
    | hasItems      | false   |
    | hasLiquids    | true    |
    | outputsLiquid | true    |
    | group         | liquids |
** Power
*** PowerBlock
    [[Abstract]] type which extends [[Block][Block]]

    Defaults:

    | field    | default |
    |----------+---------|
    | update   | true    |
    | solid    | true    |
    | hasPower | true    |
    | group    | power   |

*** PowerNode
    Extends [[PowerBlock][PowerBlock]]

    | field      | type  | default |
    |------------+-------+---------|
    | laserRange | float |       6 |
    | maxNodes   | int   |       3 |

    Defaults:

    | field         | default |
    |---------------+---------|
    | expanded      | true    |
    | layer         | power   |
    | configurable  | true    |
    | consumesPower | false   |
    | outputsPower  | false   |

*** PowerDistributor
    Extends [[PowerBlock][PowerBlock]]

    Defaults:
    | field         | default |
    |---------------+---------|
    | consumesPower | false   |
    | outputsPower  | true    |

*** Battery
    Extends [[PowerDistributor][PowerDistributor]] -- Just a change of defaults for batteries.

    Defauts:

    | field         | default |
    |---------------+---------|
    | outputsPower  | true    |
    | consumesPower | true    |

*** PowerGenerator
    Extends [[PowerDistributor][PowerDistributor]] -- Base of power generators.

    | field           | type      | default             | notes      |
    |-----------------+-----------+---------------------+------------|
    |                 |           |                     | <10>       |
    | powerProduction | float     |                     | power produced per tick at 100% (=1.0=) efficiency |
    | generationType  | BlockStat | basePowerGeneration |            |

    Notes:
    * ~1 powerProduction ~ 60 pu/s~

    Defaults:
    | field             | default |
    |-------------------+---------|
    | baseExplosiveness | 5       |

*** ThermalGenerator
    Extends [[PowerGenerator][PowerGenerator]] -- Generates power with the heat [[Attributes][attribute]] of a tile. Power production is ~powerProduction * heat~, and ~heat~ must be greater then ~0.01~.

    | field          | type   | default | notes      |
    |----------------+--------+---------+------------|
    |                |        |         | <10>       |
    | generateEffect | [[Effect][Effect]] | none    |            |

*** ItemLiquidGenerator
    Extends [[PowerGenerator][PowerGenerator]] -- Base power generation block which can use items, liquids or both as input sources for power production. Liquids will take priority over items.

   | field               | type    | default       | notes      |
   |---------------------+---------+---------------+------------|
   |                     |         |               | <10>       |
   | minItemEfficiency   | float   | 0.2           |            |
   | itemDuration        | float   | 70            | number of ticks during which a single item will produce power. |
   | minLiquidEfficiency | float   | 0.2           |            |
   | maxLiquidGenerate   | float   | 0.4           | Maximum liquid used per frame. |
   | generateEffect      | [[Effect][Effect]]  | generatespark |            |
   | explodeEffect       | [[Effect][Effect]]  | generatespark |            |
   | heatColor           | [[Color][Color]]   | ff9b59        |            |
   | randomlyExplode     | boolean | true          |            |
   | defaults            | boolean | false         |            |

   Notes:
   * item efficiency is always 0.0
   * liquid efficiency is always 0.0

   Extra sprites:
   * ~<name>-top~ if ~hasItems~ is ~true~
   * ~<name>-liquid~

*** SingleTypeGenerator
    Extends [[ItemLiquidGenerator][ItemLiquidGenerator]] -- Generates power from an item.
*** BurnerGenerator
    Extends [[ItemLiquidGenerator][ItemLiquidGenerator]] -- Generates power from item flamability.
*** DecayGenerator
    Extends [[ItemLiquidGenerator][ItemLiquidGenerator]] -- Generates power from item radioactivity.

    Defaults:
    | field      | default |
    |------------+---------|
    | hasItems   | true    |
    | hasLiquids | false   |

*** SolarGenerator
    Extends [[PowerGenerator][PowerGenerator]] -- A generator that always produces 100% efficiency power.

    Notes:
    * Lower targetting priority then other generators.

*** NuclearReactor
    Extends [[PowerGenerator][PowerGenerator]] -- Generates power relative to how many items are in storage, and explodes if it runs out of coolant.

    | field           | type  |  default | notes      |
    |-----------------+-------+----------+------------|
    |                 |       |          | <10>       |
    | coolColor       | [[Color][Color]] | ffffff00 |            |
    | hotColor        | [[Color][Color]] | ff9575a3 |            |
    | itemDuration    | float |      120 | time to consume 1 fuel |
    | heating         | float |     0.01 | heating per frame * fullness |
    | smokeThreshold  | float |      0.3 | heat at which blocks start smoking |
    | explosionRadius | int   |       40 |            |
    | explosionDamage | int   |     1350 |            |
    | flashThreshold  | float |     0.46 | heat at which lights start flashing |
    | coolantPower    | float |      0.5 |            |

    Defaults:

    | field          | default |
    |----------------+---------|
    | itemCapacity   | 30      |
    | liquidCapacity | 30      |
    | hasItems       | true    |
    | hasLiquids     | true    |

    Extra Sprites:
    * ~<name>-center~ top region
    * ~<name>-lights~ lights region

*** ImpactReactor
    Extends [[PowerGenerator][PowerGenerator]] -- Generator that uses power and has a startup time.

    | field           | type  | default | notes      |
    |-----------------+-------+---------+------------|
    |                 |       |         | <10>       |
    | plasmas         | int   |       4 | number of plasma sprites |
    | warmupSpeed     | float |   0.001 |            |
    | itemDuration    | float |      60 |            |
    | explosionRadius | int   |      50 |            |
    | explosionDamage | int   |    2000 |            |
    | plasma1         | [[Color][Color]] |  ffd06b |            |
    | plasma2         | [[Color][Color]] |  ff361b |            |

    Defaults:
    | field          | default |
    |----------------+---------|
    | hasPower       | true    |
    | hasLiquids     | true    |
    | liquidCapacity | 30f     |
    | hasItems       | true    |
    | outputsPower   | true    |
    | consumesPower  | true    |

    Sprites:
    * ~<name>-bottom~ bottom region
    * ~<name>-plasma-<i>~ plasma regions, where ~i~ is ~0~ to ~plasmas - 1~.
** Production
*** Drill
    Extends [[Block][Block]] -- Types which can be placed on ore blocks to extract the [[OreBlock]]'s item.

    | field                | type    | default        | notes      |
    |----------------------+---------+----------------+------------|
    |                      |         |                | <10>       |
    | tier                 | int     |                | Maximum tier of blocks this drill can mine. |
    | drillTime            | float   | 300            | Base time to drill one ore, in frames. |
    | liquidBoostIntensity | float   | 1.6            | How many times faster the drill will progress when boosted by liquid. |
    | warmupSpeed          | float   | 0.02           | Speed at which the drill speeds up. |
    | drawMineItem         | boolean | false          | Whether to draw the item this drill is mining. |
    | drillEffect          | [[Effect][Effect]]  | mine           | Effect played when an item is produced. This is colored. |
    | rotateSpeed          | float   | 2              | Speed the drill bit rotates at. |
    | updateEffect         | [[Effect][Effect]]  | pulverizeSmall | Effect randomly played while drilling. |
    | updateEffectChance   | float   | 0.02           | Chance the update effect will appear. |
    | drawRim              | boolean | false          |            |
    | heatColor            | [[Color][Color]]   | ff5512         |            |

    Defaults:
    | field           | default |
    |-----------------+---------|
    | update          | true    |
    | solid           | true    |
    | layer           | overlay |
    | group           | drills  |
    | hasLiquids      | true    |
    | liquidCapacity  | 5       |
    | hasItems        | true    |
    | idleSound       | drill   |
    | idleSoundVolume | 0.003   |

    Sprites:
    * ~<name>-rim~
    * ~<name>-rotator~
    * ~<name>-top~

*** SolidPump
    Extends [[Pump][Pump]] -- Pump that makes liquid from solids and takes in power. Only works on solid floor blocks.

    | field              | type      | default |
    |--------------------+-----------+---------|
    | result             | [[Liquid][Liquid]]    | water   |
    | updateEffect       | [[Effect][Effect]]    | none    |
    | updateEffectChance | float     | 0.02    |
    | rotateSpeed        | float     | 1       |
    | attribute          | [[Attribute][Attribute]] |         |

    Defaults:
    | field    | default |
    |----------+---------|
    | hasPower | true    |

    Sprites:
    * ~<name>-liquid~

*** Cultivator
    Extends [[GenericCrafter][GenericCrafter]]

    | field      | type  | default |
    |------------+-------+---------|
    | recurrence | float |       6 |

    Defaults:
    | field       | default |
    |-------------+---------|
    | craftEffect | none    |

    Sprites:
    * ~<name>-middle~
    * ~<name>-top~

*** Fracker
    Extends [[SolidPump][SolidPump]]

    | field       | default |
    |-------------+---------|
    | itemUseTime |     100 |

    Defaults:
    | field    | default |
    |----------+---------|
    | hasItems | true    |

    Sprites:
    * ~<name>-liquid~
    * ~<name>-rotater~
    * ~<name>-top~
*** Incinerator
    Extends [[Block][Block]]

    | field      | type   |  default |
    |------------+--------+----------|
    |            |        |      <r> |
    | effect     | [[Effect][Effect]] | fuelburn |
    | flameColor | [[Color][Color]]  |   ffad9d |

    Defaults:

    | field     | default |
    |-----------+---------|
    |           |     <r> |
    | hasPower  |    true |
    | hasLiquid |    true |
    | update    |    true |
    | soild     |    true |
** Unit Blocks
*** RepairPoint
    Extends [[Block][Block]] -- Block which can repair units within range, with a laser.

    | field        | type  | default |
    |--------------+-------+---------|
    | repairRadius | float |      50 |
    | repairSpeed  | float |     0.3 |
    | powerUse     | float |         |

    Defaults:
    | field       | default |
    |-------------+---------|
    | update      | true    |
    | solid       | true    |
    | hasPower    | true    |
    | outlineIcon | true    |
    | layer       | turret  |
    | layer2      | power   |

    Extra sprites:
    * ~<name>-base~

*** UnitFactory
    Extends [[Block][block]] -- A block can produce units

    | field          | type     | default |
    |----------------+----------+---------|
    | produceTime    | float    |    1000 |
    | launchVelocity | float    |       0 |
    | maxSpawn       | int      |       4 |
    | unitType       | [[UnitType][UnitType]] |    none |

    Defaults:

    | field    | default  |
    |----------+----------|
    | update   | true     |
    | hasPower | true     |
    | hasItems | true     |
    | soild    | false    |
    | flags    | producer |

    Sprite suffix:
    * ~-top~

*** CommandCenter
    Extends [[Block][Block]] -- A block which can issue commands to your unit.

    | field       | type   | default     |
    |-------------+--------+-------------|
    | topColor    | [[Color][Color]]  | command     |
    | bottomColor | [[Color][Color]]  | 5e5e5e      |
    | effect      | [[Effect][Effect]] | commandSend |

    Defaults:

    | field        | default      |
    |--------------+--------------|
    | flags        | comandCenter |
    | destructible | true         |
    | soild        | true         |
    | configurable | true         |

*** MechPad
    Extends [[Block][Block]] -- A block which will spawn a player in a mech.

    | field     | type  | default |
    |-----------+-------+---------|
    | mech      | [[Mech][Mech]]  | none    |
    | buildTime | float | 60 * 5  |

    Defaults:

    | field    | default |
    |----------+---------|
    | update   | true    |
    | soild    | true    |
    | hasPower | true    |
    | layer    | overlay |
    | flags    | mechpad |

** Storage
*** StorageBlock

    [[Abstract]] type which extends [[Block]]

    Defaults:
    | field    | default |
    |----------+---------|
    | hasItems | true    |

*** CoreBlock

    Extends [[StorageBlock]]

    | field | type | default |
    |-------+------+---------|
    | mech  | Mech | starter |

    Defaults:

    | field             | default    |
    |-------------------+------------|
    | solid             | true       |
    | update            | true       |
    | hasItems          | true       |
    | activeSound       | respawning |
    | activeSoundVolume | 1          |
    | layer             | overlay    |

*** Vault

    Extends [[StorageBlock][StorageBlock]] -- A type of storage block

    Defaults:

    | field             | default    |
    |-------------------+------------|
    | solid             | true       |
    | destructible      | true       |
    | update            | false      |

*** Unloader

    Extends [[Block][Block]] -- A block can unload items from storage block and machine

    | field | type  | default |
    |-------+-------+---------|
    | speed | float | 1       |

    Defaults:

    | field        | default |
    |--------------+---------|
    | solid        | true    |
    | health       | 70      |
    | update       | false   |
    | hasItems     | true    |
    | confugurable | true    |

    Sprite suffix:
    * ~-center~


*** LaunchPad
    Extends [[StorageBlock][StroageBlock]] -a block can launch materials without coreblock

    | field      | type  | default |
    |------------+-------+---------|
    | launchTime | float | none    |

    Defaults:

    | field    | default |
    |----------+---------|
    | update   | true    |
    | hasItems | true    |
    | soild    | true    |

** Attributes

   An object with an array of [[Attribute][attribute]]. Used in the ~Floor~ type to give a tile specific properties, like /hottness/ or /sporness/ for efficiency of various systems, like ThermalPumps and WaterExtractors.

   ~array~ has 4 items:

   * index ~0~ is ~heat~,
   * index ~1~ is ~spores~,
   * index ~2~ is ~water~,
   * index ~3~ is ~oil~.

    For example, this would give you ~100~ heat, ~1~ spores, ~0.5~ water and ~0.1~ oil.

    #+BEGIN_SRC json
    {
        "array": [ 100, 1, 0.5, 0.1]
    }
    #+END_SRC

    You could use it inside of [[Floor][Floor]] type as such:

    #+BEGIN_SRC json
    {
        "type": "Floor",
        "name": "magma",
        "attributes": { "array": [ 0.75, 0, 0, 0 ] }
    }
    #+END_SRC

** Attribute

   New attributes cannot be added. List of built-in attributes:

   * ~heat~
   * ~spores~
   * ~water~
   * ~oil~
** BuildVisibility

   Options for build visibility include:
   * ~hidden~
   * ~shown~
   * ~debugOnly~
   * ~sandboxOnly~
   * ~campaignOnly~
** BlockGroup

   Groups for blocks to build on top of each other:
   * ~none~
   * ~walls~
   * ~turrets~
   * ~transportation~
   * ~power~
   * ~liquids~
   * ~drills~


* Type
  :PROPERTIES:
  :DESCRIPTION: the building blocks of the universe.
  :END:
** TODO ContentType

   ContentType is the core difference between all major content in the game. This is what the ~content/~ directory is referencing when it looks for ~content/units~ or ~content/blocks~, it's referencing ~ContentType.block~ + ~s~.

   ~ContentType~ may include the following:


** UnlockableContent and MappableContent

   that can have a display name and description. /Most content in other words/. [[ItemStack][ItemStack]] for example isn't ~UnlockableContent~.

   #+BEGIN_SRC json
   {
       "type": "Revenant",
       "name": "Mammoth",
       "description": "Not a description."
   }
   #+END_SRC

   | field       | type   | notes      |
   |-------------+--------+------------|
   |             |        | <10>       |
   | name        | String | Used to display a name in the user. This is the name the user will see. |
   | description | String | Used display a description to the user. |
** Item

   Extends [[UnlockableContent and MappableContent][UnlockableContent]] -- It's the object that can ride conveyors, sorters and be stored in containers, and is commonly used in crafters.

   | field          | type     | default | notes      |
   |----------------+----------+---------+------------|
   |                |          |         | <10>       |
   | color          | [[Color][Color]]    |         | hex string of color |
   | type           | [[Item][ItemType]] |         | resource or material; used for tabs and core acceptance |
   | explosiveness  | float    | ~0~     | how explosive this item is. |
   | flammability   | float    | ~0~     | flammability above 0.3 makes this eleigible for item burners. |
   | radioactivity  | float    |         | how radioactive this item is. 0=none, 1=chernobyl ground zero |
   | hardness       | int      | ~0~     | drill hardness of the item |
   | cost           | float    | ~1~     | used for calculating place times; 1 cost = 1 tick added to build time |
   | alwaysUnlocked | boolean  | ~false~ | If true, item is always unlocked. |
** ItemStack

   This type is used to tell blocks to calculate their output/input rates. An item stack is simply an array of objects with the following fields:

   | field  | type | default |
   |--------+------+---------|
   | amount | int  |       1 |
   | item   | [[Item][Item]] |         |

   For example:

   #+BEGIN_SRC json
   [
       { "amount": 30, "item": "surge-alloy" },
       { "amount": 90, "item": "copper" }
   ]
   #+END_SRC

** Liquid

   Extends [[UnlockableContent and MappableContent][UnlockableContent]] -- Object that defines the properties of a liquid.

   | field         | type         | default | notes      |
   |---------------+--------------+---------+------------|
   |               |              |    <r>  | <10>       |
   | color         | [[Color][Color]]        |         | color of liquid |
   | flammability  | float        |         | 0 to 1; 0 is completely inflammable, above that may catch fire when exposed to heat. |
   | temperature   | float        |     0.5 | 0.5 is 'room' temperature, 0 is very cold, 1 is molten hot |
   | heatCapacity  | float        |     0.5 | used in cooling; water is 0.4 |
   | viscosity     | float        |     0.5 | how thick this liquid is; water is 0.5, tar is 1. |
   | explosiveness | float        |         | explosiveness when heated; 0 is nothing, 1 is nuke |
   | flameColor    | [[Color][Color]]        |  ffb763 | the burning color of this liquid |
   | effect        | [[StatusEffect][StatusEffect]] |    none | the associated status effect. |

** LiquidStack

    This type is used by blocks, to consume a liquid, just like [[ItemStack][ItemStack]] except that it can only contain 1 liquid.

    | field  | type   |
    |--------+--------|
    | liquid | [[Liquid][Liquid]] |
    | amount | float  |

    For example:

    #+BEGIN_SRC json
 {
    "liquid": "water",
    "amount": 0.5
 }
    #+END_SRC

** Weapon

   Weapons are used by units types, flying or ground, and mechs alike. They're what actually shoots the bullets.

   | field          | type       | default | notes      |
   |----------------+------------+---------+------------|
   |                |            |         | <10>       |
   | name           | string     |         |            |
   | nimPlayerDist  | float      |      20 | minimum cursor distance from player, fixes 'cross-eyed' shooting. |
   | sequenceNum    | int        |       0 |            |
   | bullet         | [[BulletType][BulletType]] |         | bullet shot |
   | ejectEffect    | [[Effect][Effect]]     |    none | shell ejection effect |
   | reload         | float      |         | weapon reload in frames |
   | shots          | int        |       1 | amount of shots per fire |
   | spacing        | float      |      12 | spacing in degrees between multiple shots, if applicable |
   | inaccuracy     | float      |       0 | inaccuracy of degrees of each shot |
   | shake          | float      |       0 | intensity and duration of each shot's screen shake |
   | recoil         | float      |     1.5 | visual weapon knockback. |
   | length         | float      |       3 | shoot barrel y offset |
   | width          | float      |       4 | shoot barrel x offset. |
   | velocityRnd    | float      |       0 | fraction of velocity that is random |
   | alternate      | bool       |   false | shoot one arm after another, rather than all at once |
   | lengthRand     | float      |       0 | randomization of shot length |
   | shotDelay      | float      |       0 | delay in ticks between shots |
   | ignoreRotation | boolean    |   false | whether shooter rotation is ignored when shooting. |
   | shootSound     | [[Sound][Sound]]      |     pew |            |
** UnitType

   Extends [[UnlockableContent and MappableContent][UnlockableContent]]

   | field           | type     | default |
   |-----------------+----------+---------|
   | type            | [[BaseUnit][BaseUnit]] |         |
   | health          | float    |      60 |
   | hitsize         | float    |       7 |
   | hitsizeTile     | float    |       4 |
   | speed           | float    |     0.4 |
   | range           | float    |       0 |
   | attackLength    | float    |     150 |
   | rotatespeed     | float    |     0.2 |
   | baseRotateSpeed | float    |     0.1 |
   | shootCone       | float    |      15 |
   | mass            | float    |       1 |
   | flying          | boolean  |         |
   | targetAir       | boolean  |    true |
   | rotateWeapon    | boolean  |   false |
   | drag            | float    |     0.1 |
   | maxVelocity     | float    |       5 |
   | retreatPercent  | float    |     0.6 |
   | itemCapacity    | int      |      30 |
   | buildPower      | float    |     0.3 |
   | minePower       | float    |     0.7 |
   | weapon          | [[Weapon][Weapon]]   |         |
   | weaponOffsetY   | float    |         |
   | engineOffset    | float    |         |
   | engineSize      | float    |         |

** Mech

   Extends [[UnlockableContent and MappableContent][UnlockableContent]] -- Mechs are the player controlled entities.

   | field              | type    | default |
   |--------------------+---------+---------|
   | flying             | boolean |         |
   | speed              | float   |     1.1 |
   | maxSpeed           | float   |      10 |
   | boostSpeed         | float   |    0.75 |
   | drag               | float   |     0.4 |
   | mass               | float   |       1 |
   | shake              | float   |       0 |
   | health             | float   |     200 |
   | hitsize            | float   |       6 |
   | cellTrnsY          | float   |       0 |
   | mineSpeed          | float   |       1 |
   | drillPower         | int     |      -1 |
   | buildPower         | float   |       1 |
   | engineColor        | [[Color][Color]]   | boostTo |
   | itemCapacity       | int     |      30 |
   | turnCursor         | boolean |    true |
   | canHeal            | boolean |   false |
   | compoundSpeed      | float   |       5 |
   | compoundSpeedBoost | float   |       5 |
   | weaponOffsetY      | float   |       5 |
   | engineOffset       | float   |       5 |
   | engineSize         | float   |     2.5 |
   | weapon             | [[Weapon][Weapon]]  |    null |

** Category

   Categories for building menu:
   * ~turret~ Offensive turrets;
   * ~production~ Blocks that produce raw resources, such as drills;
   * ~distribution~ Blocks that move items around;
   * ~liquid~ Blocks that move liquids around;
   * ~power~ Blocks that generate or transport power;
   * ~defense~ Walls and other defensive structures;
   * ~crafting~ Blocks that craft things;
   * ~units~ Blocks that create units;
   * ~upgrade~ Things that upgrade the player such as mech pads;
   * ~effect~ Things for storage or passive effects.

** Zone
   :PROPERTIES:
   :DESCRIPTION: type used to add maps into campaign
   :END:

   Extends [[UnlockableContent and MappableContent][UnlockableContent]] -- Type used to get maps into campaign.


   | field                | type          | default    | notes                                            |
   |----------------------+---------------+------------+--------------------------------------------------|
   | baseLaunchCost       | [[ItemStack]]     |            |                                                  |
   | launchCost           | [[ItemStack]]     |            |                                                  |
   | startingItems        | [[ItemStack]]     |            | Items you start with on the map.                 |
   | conditionWave        | int           | MAX_VALUE  |                                                  |
   | alwaysUnlocked       | boolean       | false      | Whether this map is always unlocked              |
   | launchPeriod         | int           | 10         | Rate of waves at which the core may be launched. |
   | loadout              | [[Loadout]]       | basicShard | The core size and drills.                        |
   | resources            | [ String ]    |            | Array of item names.                             |
   | requirements         | [ [[Objective]] ] |            |                                                  |
   | configureObjective   | [[Objective]]     | wave 15    |                                                  |
   | defaultStartingItems | [[ItemStack]]     |            |                                                  |

   Sprites:
   * ~zone-<name>~ preview
   * ~<name>-zone~ preview

** Loadout
   :PROPERTIES:
   :DESCRIPTION:
   :END:

   Extends [[Content]]

   Below you'll see a table of characters used to express the loadouts.


   | char  | definition                         |
   |-------+------------------------------------|
   | ~" "~ | air                                |
   | ~">"~ | conveyor right                     |
   | ~"^"~ | conveyor up                        |
   | ~"<"~ | conveyor left                      |
   | ~"v"~ | conveyor down                      |
   | ~"1"~ | coreShard                          |
   | ~"2"~ | coreFoundation                     |
   | ~"3"~ | coreNucleus                        |
   | ~"C"~ | mechicalDrill on top of copper ore |
   | ~"#"~ | occupied by core or drill          |


   Built-in loadouts:

   * ~basicShard~
     #+BEGIN_SRC fundamental
       ###
       #1#
       ###
       ^ ^
      ## ##
      C# C#
     #+END_SRC

   * ~advancedShard~
     #+BEGIN_SRC fundamental
       ###
       #1#
     #######
     C#^ ^C#
      ## ##
      C# C#
     #+END_SRC

   * ~basicFoundation~
     #+BEGIN_SRC fundamental
       ####
       ####
       #2##
       ####
       ^^^^
      ######
      C#C#C#
     #+END_SRC

   * ~basicNucleus~
     #+BEGIN_SRC fundamental
       #####
       #####
       ##3##
       #####
      >#####<
      ^ ^ ^ ^
     #### ####
     C#C# C#C#
     #+END_SRC

** StatusEffect

   /Not be be confused with [[Effect][Effect]]/, a status effect will give an entity special properties. It is currently *not possible to add custom status effects*. -- Status effects are used as transitions between intermediate effects. If some a ~wet~ unit gets ~shocked~ it then gets 20 damage.

   | field            | type   | default |            |
   |------------------+--------+---------+------------|
   |                  |        |         | <10>       |
   | damageMultiplier | float  |       1 |            |
   | armorMultiplier  | float  |       1 |            |
   | speedMultiplier  | float  |       1 |            |
   | color            | [[Color][Color]]  |   white |            |
   | damage           | float  |         | Damage (or healing) per frame. |
   | effect           | [[Effect][Effect]] |    none | Random effect (0.15% per frame), on affected units. |

   * opposites: effect which reduces anothers lifetime.

   Built-in status effects:

   * ~none~ -- Does nothing.

   * ~burning~
     | field  | value   |
     |--------+---------|
     | damage | 0.06    |
     | effect | burning |
     * opposites: ~wet~ ~freezing~
     * tarred: 1 damage and keeps burning

   * ~freezing~
     | field           |    value |
     |-----------------+----------|
     | speedMultiplier |      0.6 |
     | armorMultiplier |      0.8 |
     | effect          | freezing |
     * opposites: ~melting~ ~burning~

   * ~wet~
     | field           | value |
     |-----------------+-------|
     | speedMultiplier | 0.9   |
     | effect          | wet   |
     * opposites: ~burning~
     * shocked: 20 damage

   * ~melting~
     | field           |   value |
     |-----------------+---------|
     | speedMultiplier |     0.8 |
     | armorMultiplier |     0.8 |
     | damage          |     0.3 |
     | effect          | melting |
     * opposites: ~wet~ ~freezing~
     * tarred: keeps melting

   * ~tarred~
     | field           | value |
     |-----------------+---------|
     | speedMultiplier | 0.6     |
     | effect          | oily    |
     * burning: keeps burning
     * melting: keeps burning

   * ~overdrive~
     | field            |      value |
     |------------------+------------|
     | armorMultiplier  |       0.95 |
     | speedMultiplier  |       1.15 |
     | damageMultiplier |        1.4 |
     | damage           |      -0.01 |
     | effect           | overdriven |

   * ~shielded~
     | field           | value |
     |-----------------+-------|
     | armorMultiplier |     3 |

   * ~boss~
     | field            | value |
     |------------------+-------|
     | armorMultiplier  |     3 |
     | damageMultiplier |     3 |
     | speedMultiplier  |   1.1 |

   * ~shocked~ -- Does nothing.

   * ~corroded~
     | field  | value |
     |--------+-------|
     | damage |   0.1 |


* Graphics
  :PROPERTIES:
  :DESCRIPTION: the rendering specific stuff.
  :END:
** Layer

   Layers is an enumeration type, which the renderer will use to group rendering order:

   * ~block~, base block layer;
   * ~placement~, for placement;
   * ~overlay~, first overlay stuff like conveyor items;
   * ~turret~, "high" blocks like turrets;
   * ~power~ power lasers
** Color

   Color is a hexadecimal string, ~<rr><gg><bb>~ for example:

   * ~ff0000~ is red,
   * ~00ff00~ is green,
   * ~00ffff~ is blue,
   * ~ffff00~ is yellow,
   * ~00ffff~ is cyan,
   * /ect../


* Entities
  :PROPERTIES:
  :DESCRIPTION: the things that exists as themselves.
  :END:
** BulletType

   [[Abstract]] type which extends [[Content][Content]] -- BulletType can either be an object or a string, where a string would be reusing a built-in one, and an object would be making a custom one. There are two major categories of bullet types:
   * [[BasicBulletType]]
   * /everything else/

   | field              | type         | default | notes      |
   |--------------------+--------------+---------+------------|
   |                    |              |         | <10>       |
   | lifetime           | float        |         | amount of ticks it will lasts |
   | speed              | float        |         | inital speed of bullet |
   | damage             | float        |         | collision damage |
   | hitSize            | float        |       4 | collision radius |
   | drawSize           | float        |      40 |            |
   | drag               | float        |       0 | decelleration per tick |
   | pierce             | boolean      |         | whether it can collide |
   | hitEffect          | [[Effect][Effect]]       |         | created when bullet hits something |
   | despawnEffect      | [[Effect][Effect]]       |         | created when bullet despawns |
   | shootEffect        | [[Effect][Effect]]       |         | created when shooting |
   | smokeEffect        | [[Effect][Effect]]       |         | created when shooting |
   | hitSound           | Sound        |         | made when hitting something or getting removed |
   | inaccuracy         | float        |       0 | extra inaccuracy |
   | ammoMultiplier     | float        |       2 | how many bullets get created per item/liquid |
   | reloadMultiplier   | float        |       1 | multiplied by turret reload speed |
   | recoil             | float        |         | recoil from shooter entities |
   | splashDamage       | float        |       0 |            |
   | knockback          | float        |         | Knockback in velocity. |
   | hitTiles           | boolean      |    true | Whether this bullet hits tiles. |
   | status             | [[StatusEffect][StatusEffect]] |    none | Status effect applied on hit. |
   | statusDuration     | float        |     600 | Intensity of applied status effect in terms of duration. |
   | collidesTiles      | boolean      |    true | Whether this bullet type collides with tiles. |
   | collidesTeam       | boolean      |   false | Whether this bullet type collides with tiles that are of the same team. |
   | collidesAir        | boolean      |    true | Whether this bullet type collides with air units. |
   | collides           | boolean      |    true | Whether this bullet types collides with anything at all. |
   | keepVelocity       | boolean      |    true | Whether velocity is inherited from the shooter. |
   | fragBullets        | int          |       9 |            |
   | fragVelocityMin    | float        |     0.2 |            |
   | fragVelocityMax    | float        |       1 |            |
   | fragBullet         | [[BulletType][BulletType]]   |    null |            |
   | splashDamageRadius | float        |      -1 | Use a negative value to disable splash damage. |
   | incendAmount       | int          |       0 |            |
   | incendSpread       | float        |       8 |            |
   | incendChance       | float        |       1 |            |
   | homingPower        | float        |       0 | Doesn't do anything complicated; if ~homingPower~ larger then ~0.01~ it gets rendered in the UI, if ~homingPower~ is larger then ~0.0001~ it allows ~homingRange~ to work. |
   | homingRange        | float        |      50 | How far the bullet can home towards target from itself. |
   | lightining         | int          |         |            |
   | lightningLength    | int          |       5 |            |
   | hitShake           | float        |       0 |            |

*** BasicBulletType

    Extends [[BulletType]] -- This type is special in it allows you to set colors and sprites.

    | field        | type   |          default |            |
    |--------------+--------+------------------+------------|
    |              |        |                  | <10>       |
    | backColor    | [[Color][Color]]  | bulletYellowBack | Color of ~<name>-back~ sprite. |
    | frontColor   | [[Color][Color]]  |     bulletYellow | Color of ~<name>~ sprite. |
    | bulletWidth  | float  |                5 |            |
    | bulletHeight | float  |                7 |            |
    | bulletShrink | float  |              0.5 |            |
    | bulletSprite | String |                  | Mapping sprite used to make the shape of the bullet. |

    Sprites:
    * ~<name>~ top layer sprite
    * ~<name>-back~ bottom layer sprite

**** ArtilleryBulletType

     Extends [[BasicBulletType]]

     | field       | type   | default        |
     |-------------+--------+----------------|
     | trailEffect | [[Effect][Effect]] | artilleryTrail |

     Defaults:

     | field         | type      |
     |---------------+-----------|
     | collidesTiles | false     |
     | collides      | false     |
     | collidesAir   | false     |
     | hitShake      | 1         |
     | hitSound      | explosion |

**** BombBulletType

     Extends [[BasicBulletType]]

     Defaults:

     | field         | default   |
     |---------------+-----------|
     | collidesTiles | false     |
     | collides      | false     |
     | bulletShrink  | 0.7       |
     | lifetime      | 30        |
     | drag          | 0.05      |
     | keepVelocity  | false     |
     | collidesAir   | false     |
     | hitSound      | explosion |

**** FlakBulletType

     Extends [[BasicBulletType]]

     Bullets that explode near enemies.

     | field        | type  | default |
     |--------------+-------+---------|
     |              |       |         |
     | explodeRange | float |      30 |

     Defaults:

     | field              |             type |
     |--------------------+------------------|
     | splashDamage       |               15 |
     | splashDamageRadius |               34 |
     | hitEffect          | flakExplosionBig |
     | bulletWidth        |                8 |
     | bulletHeight       |               10 |

**** MissileBulletType

     Extends [[BasicBulletType]]

     | field      | type  |           default |
     |------------+-------+-------------------|
     | trailColor | [[Color][Color]] | missileYellowBack |
     | weaveScale | float |                 0 |
     | weaveMag   | float |                -1 |

*** HealBulletType

    Extends [[BulletType]] -- Bullets that can heal blocks of the same team as the shooter.

    | field       | type  | default |
    |-------------+-------+---------|
    | healPercent | float |       3 |

    Defaults:

    | field         | default  |
    |---------------+-----------|
    | shootEffect   | shootHeal |
    | smokeEffect   | hitLaser  |
    | hitEffect     | hitLaser  |
    | despawnEffect | hitLaser  |
    | collidesTeam  | true      |

*** LiquidBulletType

    Extends [[BulletType]]

    | field  | type   | default | notes        |
    |--------+--------+---------+--------------|
    | liquid | Liquid | null    | *[required]* |

    Defaults:

    | field          | default   |
    |----------------+-----------|
    | lifetime       | 74        |
    | statusDuration | 90        |
    | despawnEffect  | none      |
    | hitEffect      | hitLiquid |
    | smokeEffect    | none      |
    | shootEffect    | none      |
    | drag           | 0.009     |
    | knockback      | 0.55      |

*** MassDriverBolt

    Extends [[BulletType]]

    Defaults:

    | field         | default      |
    |---------------+--------------|
    | collidesTiles | false        |
    | lifetime      | 200          |
    | despawnEffect | smeltsmoke   |
    | hitEffect     | hitBulletBig |
    | drag          | 0.005        |

*** Built-in Bullets

   * artillery:
     * ~artilleryDense~ ~arilleryPlastic~ ~artilleryPlasticFrag~ ~artilleryHoming~ ~artlleryIncendiary~ ~artilleryExplosive~ ~artilleryUnit~
   * flak:
     * ~flakScrap~ ~flakLead~ ~flakPlastic~ ~flakExplosive~ ~flakSurge~ ~flakGlass~ ~glassFrag~
   * missiles:
     * ~missileExplosive~ ~missileIncendiary~ ~missileSurge~ ~missileJavelin~ ~missileSwarm~ ~missileRevenant~
   * standard:
     * ~standardCopper~ ~standardDense~ ~standardThorium~ ~standardHoming~ ~standardIncendiary~ ~standardMechSmall~ ~standardGlaive~ ~standardDenseBig~ ~standardThoriumBig~ ~standardIncendiaryBig~
   * electric:
     * ~lancerLaser~ ~meltdownLaser~ ~lightning~ ~arc~ ~damageLightning~
   * liquid:
     * ~waterShot~ ~cryoShot~ ~slagShot~ ~oilShot~
   * environment & misc:
     * ~fireball~ ~basicFlame~ ~pyraFlame~ ~driverBolt~ ~healBullet~ ~healBulletBig~ ~frag~ ~eruptorShot~
   * bombs:
     * ~bombExplosive~ ~bombIncendiary~ ~bombOil~

** BaseUnit

   There are a few useful base unit types:

   * ~FlyingUnit~
     * ~Revenant~
     * ~BaseDrone~
       * ~BuilderDrone~
       * ~MinerDrone~
       * ~RepairDrone~
   * ~GroundUnit~

** Effect

   Type should be a ~string~. You can't currently create custom effects. List of built-in effects are as follows:

   * ~none~ ~placeBlock~ ~breakBlock~ ~smoke~ ~spawn~ ~tapBlock~ ~select~
   * ~vtolHover~ ~unitDrop~ ~unitPickup~ ~unitLand~ ~pickup~ ~healWave~ ~heal~
       ~landShock~ ~reactorsmoke~ ~nuclearsmoke~ ~nuclearcloud~
   * ~redgeneratespark~ ~generatespark~ ~fuelburn~ ~plasticburn~ ~pulverize~
       ~pulverizeRed~ ~pulverizeRedder~ ~pulverizeSmall~ ~pulverizeMedium~
   * ~producesmoke~ ~smeltsmoke~ ~formsmoke~ ~blastsmoke~ ~lava~ ~doorclose~
       ~dooropen~ ~dooropenlarge~ ~doorcloselarge~ ~purify~ ~purifyoil~ ~purifystone~ ~generate~
   * ~mine~ ~mineBig~ ~mineHuge~ ~smelt~ ~teleportActivate~ ~teleport~ ~teleportOut~ ~ripple~ ~bubble~ ~launch~
   * ~healBlock~ ~healBlockFull~ ~healWaveMend~ ~overdriveWave~ ~overdriveBlockFull~ ~shieldBreak~ ~hitBulletSmall~ ~hitFuse~
   * ~hitBulletBig~ ~hitFlameSmall~ ~hitLiquid~ ~hitLaser~ ~hitLancer~ ~hitMeltdown~ ~despawn~ ~flakExplosion~ ~blastExplosion~
   * ~plasticExplosion~ ~artilleryTrail~ ~incendTrail~ ~missileTrail~ ~absorb~ ~flakExplosionBig~ ~plasticExplosionFlak~ ~burning~ ~fire~
   * ~fireSmoke~ ~steam~ ~fireballsmoke~ ~ballfire~ ~freezing~ ~melting~ ~wet~ ~oily~ ~overdriven~ ~dropItem~ ~shockwave~
   * ~bigShockwave~ ~nuclearShockwave~ ~explosion~ ~blockExplosion~
       ~blockExplosionSmoke~ ~shootSmall~ ~shootHeal~ ~shootSmallSmoke~ ~shootBig~ ~shootBig2~ ~shootBigSmoke~
   * ~shootBigSmoke2~ ~shootSmallFlame~ ~shootPyraFlame~ ~shootLiquid~ ~shellEjectSmall~ ~shellEjectMedium~
   * ~shellEjectBig~ ~lancerLaserShoot~ ~lancerLaserShootSmoke~ ~lancerLaserCharge~
       ~lancerLaserChargeBegin~ ~lightningCharge~ ~lightningShoot~
   * ~unitSpawn~ ~spawnShockwave~ ~magmasmoke~ ~impactShockwave~
       ~impactcloud~ ~impactsmoke~ ~dynamicExplosion~ ~padlaunch~ ~commandSend~ ~coreLand~
** TargetPriority

   * ~base~
   * ~turret~

* Game
  :PROPERTIES:
  :DESCRIPTION: the rules and goals of it all.
  :END:

** Objective

   Objective is a trait, of which a few types implement. It's used by [[Zone]] to give campaign objectives. 

*** ZoneObjective
    :PROPERTIES:
    :DESCRIPTION: zone specific condition
    :END:

    [[Abstract]] type that implements [[Objective]]

    | field | default |
    |-------+---------|
    | zone  | Zone    |

*** ZoneWave
    :PROPERTIES: 
    :DESCRIPTION: zone and wave specific condition
    :END:

    Extends [[ZoneObjective]]

    | field | type |
    |-------+------|
    | wave  | int  |

    * complete if zone best wave is larger then ~wave~.

*** Launched
    :PROPERTIES: 
    :DESCRIPTION: zone and launched specific condition
    :END:

    Extends [[ZoneObjective]]

    * complete if ~zone~ has launched.

*** Unlock
    :PROPERTIES:
    :DESCRIPTION: block unlock specific condition
    :END:

    Extends [[Objective]]

    | field | type  |
    |-------+-------|
    | block | [[Block]] |

    * complete if ~block~ is unlocked.

* Other
  :PROPERTIES:
  :DESCRIPTION: ...
  :END:

** Mindustry Source Structure

   #+BEGIN_SRC fundamental
   core/src/io/anuke/mindustry/
   ├── ai
   │   ├── BlockIndexer.java
   │   ├── Pathfinder.java
   │   └── WaveSpawner.java
   ├── ClientLauncher.java
   ├── content
   │   ├── Blocks.java
   │   ├── Bullets.java
   │   ├── Fx.java
   │   ├── Items.java
   │   ├── Liquids.java
   │   ├── Loadouts.java
   │   ├── Mechs.java
   │   ├── StatusEffects.java
   │   ├── TechTree.java
   │   ├── TypeIDs.java
   │   ├── UnitTypes.java
   │   └── Zones.java
   ├── core
   │   ├── ContentLoader.java
   │   ├── Control.java
   │   ├── FileTree.java
   │   ├── GameState.java
   │   ├── Logic.java
   │   ├── NetClient.java
   │   ├── NetServer.java
   │   ├── Platform.java
   │   ├── Renderer.java
   │   ├── UI.java
   │   ├── Version.java
   │   └── World.java
   ├── ctype
   │   ├── Content.java
   │   ├── ContentList.java
   │   ├── MappableContent.java
   │   └── UnlockableContent.java
   ├── editor
   │   ├── DrawOperation.java
   │   ├── EditorTile.java
   │   ├── EditorTool.java
   │   ├── MapEditorDialog.java
   │   ├── MapEditor.java
   │   ├── MapGenerateDialog.java
   │   ├── MapInfoDialog.java
   │   ├── MapLoadDialog.java
   │   ├── MapRenderer.java
   │   ├── MapResizeDialog.java
   │   ├── MapSaveDialog.java
   │   ├── MapView.java
   │   ├── OperationStack.java
   │   └── WaveInfoDialog.java
   ├── entities
   │   ├── bullet
   │   │   ├── ArtilleryBulletType.java
   │   │   ├── BasicBulletType.java
   │   │   ├── BombBulletType.java
   │   │   ├── BulletType.java
   │   │   ├── FlakBulletType.java
   │   │   ├── HealBulletType.java
   │   │   ├── LiquidBulletType.java
   │   │   ├── MassDriverBolt.java
   │   │   └── MissileBulletType.java
   │   ├── Damage.java
   │   ├── effect
   │   │   ├── Decal.java
   │   │   ├── Fire.java
   │   │   ├── GroundEffectEntity.java
   │   │   ├── ItemTransfer.java
   │   │   ├── Lightning.java
   │   │   ├── Puddle.java
   │   │   ├── RubbleDecal.java
   │   │   └── ScorchDecal.java
   │   ├── Effects.java
   │   ├── Entities.java
   │   ├── EntityCollisions.java
   │   ├── EntityGroup.java
   │   ├── Predict.java
   │   ├── TargetPriority.java
   │   ├── traits
   │   │   ├── AbsorbTrait.java
   │   │   ├── BelowLiquidTrait.java
   │   │   ├── BuilderMinerTrait.java
   │   │   ├── BuilderTrait.java
   │   │   ├── DamageTrait.java
   │   │   ├── DrawTrait.java
   │   │   ├── Entity.java
   │   │   ├── HealthTrait.java
   │   │   ├── KillerTrait.java
   │   │   ├── MinerTrait.java
   │   │   ├── MoveTrait.java
   │   │   ├── Saveable.java
   │   │   ├── SaveTrait.java
   │   │   ├── ScaleTrait.java
   │   │   ├── ShooterTrait.java
   │   │   ├── SolidTrait.java
   │   │   ├── SpawnerTrait.java
   │   │   ├── SyncTrait.java
   │   │   ├── TargetTrait.java
   │   │   ├── TeamTrait.java
   │   │   ├── TimeTrait.java
   │   │   ├── TypeTrait.java
   │   │   └── VelocityTrait.java
   │   ├── type
   │   │   ├── base
   │   │   │   ├── BaseDrone.java
   │   │   │   ├── BuilderDrone.java
   │   │   │   ├── Crawler.java
   │   │   │   ├── Dagger.java
   │   │   │   ├── Draug.java
   │   │   │   ├── Eruptor.java
   │   │   │   ├── FlyingUnit.java
   │   │   │   ├── Fortress.java
   │   │   │   ├── Ghoul.java
   │   │   │   ├── GroundUnit.java
   │   │   │   ├── MinerDrone.java
   │   │   │   ├── Phantom.java
   │   │   │   ├── RepairDrone.java
   │   │   │   ├── Revenant.java
   │   │   │   ├── Spirit.java
   │   │   │   ├── Titan.java
   │   │   │   └── Wraith.java
   │   │   ├── BaseEntity.java
   │   │   ├── BaseUnit.java
   │   │   ├── Bullet.java
   │   │   ├── DestructibleEntity.java
   │   │   ├── EffectEntity.java
   │   │   ├── Player.java
   │   │   ├── SolidEntity.java
   │   │   ├── TileEntity.java
   │   │   ├── TimedEntity.java
   │   │   └── Unit.java
   │   ├── units
   │   │   ├── StateMachine.java
   │   │   ├── Statuses.java
   │   │   ├── UnitCommand.java
   │   │   ├── UnitDrops.java
   │   │   └── UnitState.java
   │   └── Units.java
   ├── game
   │   ├── DefaultWaves.java
   │   ├── Difficulty.java
   │   ├── EventType.java
   │   ├── Gamemode.java
   │   ├── GlobalData.java
   │   ├── LoopControl.java
   │   ├── MusicControl.java
   │   ├── Objective.java
   │   ├── Objectives.java
   │   ├── Rules.java
   │   ├── Saves.java
   │   ├── Schematic.java
   │   ├── Schematics.java
   │   ├── SoundLoop.java
   │   ├── SpawnGroup.java
   │   ├── Stats.java
   │   ├── Team.java
   │   ├── Teams.java
   │   └── Tutorial.java
   ├── graphics
   │   ├── BlockRenderer.java
   │   ├── Bloom.java
   │   ├── CacheLayer.java
   │   ├── Drawf.java
   │   ├── FloorRenderer.java
   │   ├── IndexedRenderer.java
   │   ├── Layer.java
   │   ├── MenuRenderer.java
   │   ├── MinimapRenderer.java
   │   ├── OverlayRenderer.java
   │   ├── Pal.java
   │   ├── Pixelator.java
   │   └── Shaders.java
   ├── input
   │   ├── Binding.java
   │   ├── DesktopInput.java
   │   ├── InputHandler.java
   │   ├── MobileInput.java
   │   ├── PlaceMode.java
   │   └── PlaceUtils.java
   ├── io
   │   ├── JsonIO.java
   │   ├── LegacyMapIO.java
   │   ├── MapIO.java
   │   ├── SaveFileReader.java
   │   ├── SaveIO.java
   │   ├── SaveMeta.java
   │   ├── SavePreviewLoader.java
   │   ├── SaveVersion.java
   │   ├── TypeIO.java
   │   └── versions
   │       ├── LegacyTypeTable.java
   │       ├── Save1.java
   │       ├── Save2.java
   │       └── Save3.java
   ├── maps
   │   ├── filters
   │   │   ├── BlendFilter.java
   │   │   ├── ClearFilter.java
   │   │   ├── DistortFilter.java
   │   │   ├── FilterOption.java
   │   │   ├── GenerateFilter.java
   │   │   ├── MedianFilter.java
   │   │   ├── MirrorFilter.java
   │   │   ├── NoiseFilter.java
   │   │   ├── OreFilter.java
   │   │   ├── OreMedianFilter.java
   │   │   ├── RiverNoiseFilter.java
   │   │   ├── ScatterFilter.java
   │   │   └── TerrainFilter.java
   │   ├── generators
   │   │   ├── BasicGenerator.java
   │   │   ├── Generator.java
   │   │   ├── MapGenerator.java
   │   │   └── RandomGenerator.java
   │   ├── MapException.java
   │   ├── Map.java
   │   ├── MapPreviewLoader.java
   │   ├── Maps.java
   │   └── zonegen
   │       ├── DesertWastesGenerator.java
   │       └── OvergrowthGenerator.java
   ├── mod
   │   ├── ContentParser.java
   │   ├── ModCrashHandler.java
   │   ├── Mod.java
   │   ├── ModLoadingSound.java
   │   └── Mods.java
   ├── net
   │   ├── Administration.java
   │   ├── ArcNetImpl.java
   │   ├── CrashSender.java
   │   ├── Host.java
   │   ├── Interpolator.java
   │   ├── NetConnection.java
   │   ├── Net.java
   │   ├── NetworkIO.java
   │   ├── Packet.java
   │   ├── Packets.java
   │   ├── Registrator.java
   │   ├── Streamable.java
   │   └── ValidateException.java
   ├── plugin
   │   └── Plugin.java
   ├── type
   │   ├── Category.java
   │   ├── ContentType.java
   │   ├── Item.java
   │   ├── ItemStack.java
   │   ├── ItemType.java
   │   ├── Liquid.java
   │   ├── LiquidStack.java
   │   ├── Loadout.java
   │   ├── Mech.java
   │   ├── Publishable.java
   │   ├── StatusEffect.java
   │   ├── TypeID.java
   │   ├── UnitType.java
   │   ├── Weapon.java
   │   ├── WeatherEvent.java
   │   └── Zone.java
   ├── ui
   │   ├── Bar.java
   │   ├── BorderImage.java
   │   ├── Cicon.java
   │   ├── ContentDisplay.java
   │   ├── dialogs
   │   │   ├── AboutDialog.java
   │   │   ├── AdminsDialog.java
   │   │   ├── BansDialog.java
   │   │   ├── ColorPickDialog.java
   │   │   ├── ContentInfoDialog.java
   │   │   ├── ControlsDialog.java
   │   │   ├── CustomGameDialog.java
   │   │   ├── CustomRulesDialog.java
   │   │   ├── DatabaseDialog.java
   │   │   ├── DeployDialog.java
   │   │   ├── DiscordDialog.java
   │   │   ├── FileChooser.java
   │   │   ├── FloatingDialog.java
   │   │   ├── GameOverDialog.java
   │   │   ├── HostDialog.java
   │   │   ├── JoinDialog.java
   │   │   ├── LanguageDialog.java
   │   │   ├── LoadDialog.java
   │   │   ├── LoadoutDialog.java
   │   │   ├── MapPlayDialog.java
   │   │   ├── MapsDialog.java
   │   │   ├── MinimapDialog.java
   │   │   ├── ModsDialog.java
   │   │   ├── PausedDialog.java
   │   │   ├── SaveDialog.java
   │   │   ├── SchematicsDialog.java
   │   │   ├── SettingsMenuDialog.java
   │   │   ├── TechTreeDialog.java
   │   │   ├── TraceDialog.java
   │   │   └── ZoneInfoDialog.java
   │   ├── Fonts.java
   │   ├── fragments
   │   │   ├── BlockConfigFragment.java
   │   │   ├── BlockInventoryFragment.java
   │   │   ├── ChatFragment.java
   │   │   ├── FadeInFragment.java
   │   │   ├── Fragment.java
   │   │   ├── HudFragment.java
   │   │   ├── LoadingFragment.java
   │   │   ├── MenuFragment.java
   │   │   ├── OverlayFragment.java
   │   │   ├── PlacementFragment.java
   │   │   └── PlayerListFragment.java
   │   ├── GridImage.java
   │   ├── IconSize.java
   │   ├── IntFormat.java
   │   ├── ItemDisplay.java
   │   ├── ItemImage.java
   │   ├── ItemsDisplay.java
   │   ├── layout
   │   │   ├── BranchTreeLayout.java
   │   │   ├── RadialTreeLayout.java
   │   │   └── TreeLayout.java
   │   ├── Links.java
   │   ├── LiquidDisplay.java
   │   ├── Minimap.java
   │   ├── MobileButton.java
   │   ├── MultiReqImage.java
   │   ├── ReqImage.java
   │   └── Styles.java
   ├── Vars.java
   └── world
       ├── Block.java
       ├── blocks
       │   ├── Attributes.java
       │   ├── Autotiler.java
       │   ├── BlockPart.java
       │   ├── BuildBlock.java
       │   ├── defense
       │   │   ├── DeflectorWall.java
       │   │   ├── Door.java
       │   │   ├── ForceProjector.java
       │   │   ├── MendProjector.java
       │   │   ├── OverdriveProjector.java
       │   │   ├── ShockMine.java
       │   │   ├── SurgeWall.java
       │   │   ├── turrets
       │   │   │   ├── ArtilleryTurret.java
       │   │   │   ├── BurstTurret.java
       │   │   │   ├── ChargeTurret.java
       │   │   │   ├── CooledTurret.java
       │   │   │   ├── DoubleTurret.java
       │   │   │   ├── ItemTurret.java
       │   │   │   ├── LaserTurret.java
       │   │   │   ├── LiquidTurret.java
       │   │   │   ├── PowerTurret.java
       │   │   │   └── Turret.java
       │   │   └── Wall.java
       │   ├── distribution
       │   │   ├── ArmoredConveyor.java
       │   │   ├── BufferedItemBridge.java
       │   │   ├── Conduit.java
       │   │   ├── Conveyor.java
       │   │   ├── ExtendingItemBridge.java
       │   │   ├── ItemBridge.java
       │   │   ├── Junction.java
       │   │   ├── LiquidBridge.java
       │   │   ├── LiquidExtendingBridge.java
       │   │   ├── LiquidJunction.java
       │   │   ├── LiquidRouter.java
       │   │   ├── LiquidTank.java
       │   │   ├── MassDriver.java
       │   │   ├── OverflowGate.java
       │   │   ├── Router.java
       │   │   └── Sorter.java
       │   ├── DoubleOverlayFloor.java
       │   ├── Floor.java
       │   ├── ItemSelection.java
       │   ├── LiquidBlock.java
       │   ├── logic
       │   │   ├── LogicBlock.java
       │   │   └── MessageBlock.java
       │   ├── OreBlock.java
       │   ├── OverlayFloor.java
       │   ├── power
       │   │   ├── Battery.java
       │   │   ├── BurnerGenerator.java
       │   │   ├── ConditionalConsumePower.java
       │   │   ├── DecayGenerator.java
       │   │   ├── ImpactReactor.java
       │   │   ├── ItemLiquidGenerator.java
       │   │   ├── NuclearReactor.java
       │   │   ├── PowerDistributor.java
       │   │   ├── PowerGenerator.java
       │   │   ├── PowerGraph.java
       │   │   ├── PowerNode.java
       │   │   ├── SingleTypeGenerator.java
       │   │   ├── SolarGenerator.java
       │   │   └── ThermalGenerator.java
       │   ├── PowerBlock.java
       │   ├── production
       │   │   ├── Cultivator.java
       │   │   ├── Drill.java
       │   │   ├── Fracker.java
       │   │   ├── GenericCrafter.java
       │   │   ├── GenericSmelter.java
       │   │   ├── Incinerator.java
       │   │   ├── LiquidConverter.java
       │   │   ├── Pump.java
       │   │   ├── Separator.java
       │   │   └── SolidPump.java
       │   ├── RespawnBlock.java
       │   ├── Rock.java
       │   ├── sandbox
       │   │   ├── ItemSource.java
       │   │   ├── ItemVoid.java
       │   │   ├── LiquidSource.java
       │   │   ├── PowerSource.java
       │   │   └── PowerVoid.java
       │   ├── StaticWall.java
       │   ├── storage
       │   │   ├── CoreBlock.java
       │   │   ├── LaunchPad.java
       │   │   ├── StorageBlock.java
       │   │   ├── Unloader.java
       │   │   └── Vault.java
       │   ├── TreeBlock.java
       │   └── units
       │       ├── CommandCenter.java
       │       ├── MechPad.java
       │       ├── RallyPoint.java
       │       ├── RepairPoint.java
       │       └── UnitFactory.java
       ├── BlockStorage.java
       ├── Build.java
       ├── CachedTile.java
       ├── consumers
       │   ├── ConsumeItemFilter.java
       │   ├── ConsumeItems.java
       │   ├── Consume.java
       │   ├── ConsumeLiquidBase.java
       │   ├── ConsumeLiquidFilter.java
       │   ├── ConsumeLiquid.java
       │   ├── ConsumePower.java
       │   ├── Consumers.java
       │   └── ConsumeType.java
       ├── DirectionalItemBuffer.java
       ├── Edges.java
       ├── ItemBuffer.java
       ├── LegacyColorMapper.java
       ├── meta
       │   ├── Attribute.java
       │   ├── BlockBars.java
       │   ├── BlockFlag.java
       │   ├── BlockGroup.java
       │   ├── BlockStat.java
       │   ├── BlockStats.java
       │   ├── BuildVisibility.java
       │   ├── PowerType.java
       │   ├── Producers.java
       │   ├── StatCategory.java
       │   ├── StatUnit.java
       │   ├── StatValue.java
       │   └── values
       │       ├── AmmoListValue.java
       │       ├── BooleanValue.java
       │       ├── BoosterListValue.java
       │       ├── ItemFilterValue.java
       │       ├── ItemListValue.java
       │       ├── LiquidFilterValue.java
       │       ├── LiquidValue.java
       │       ├── NumberValue.java
       │       └── StringValue.java
       ├── modules
       │   ├── BlockModule.java
       │   ├── ConsumeModule.java
       │   ├── ItemModule.java
       │   ├── LiquidModule.java
       │   └── PowerModule.java
       ├── Pos.java
       ├── producers
       │   ├── ProduceItem.java
       │   └── Produce.java
       ├── StaticTree.java
       ├── Tile.java
       └── WorldContext.java
   #+END_SRC
